namespace Domain.OutfaceModels;

public interface IApplicationConfig { }

public class AppSetting : IApplicationConfig
{
    public string ApiVersion { get; set; } = "1.0.0.0";
    public static bool IsDebugMode { get; set; } = false;
    public string ClientId { get; set; } = string.Empty;
    public DbConnection Db { get; set; } = new DbConnection();
    public string IdentityServerUrl { get; set; } = string.Empty;
    public string RMQUrl { get; set; } = string.Empty;
    public string RedisUrl { get; set; } = string.Empty;
    public string DirectDebitRedisUrl { get; set; } = string.Empty;
    public string DirectDebitRedisPassword { get; set; } = string.Empty;

    public bool AutoMigration { get; set; } = false;
    public bool EnableSwagger { get; set; } = true;

    public string StaffManagementMonitoringPath { get; set; } = "/v1";

    public string SecurityApiUrl { get; set; } = string.Empty;
    public string MobileTopUpApiUrl { get; set; } = string.Empty;
    public string NotificationApiUrl { get; set; } = string.Empty;
    public string StaffManagementApiUrl { get; set; } = string.Empty;
    public string SocketApiUrl { get; set; } = string.Empty;


    /// <summary>
    /// Delay startup in X second(s) to wait Redis & RMQ 
    /// During whole stack was deployed
    /// </summary>
    public int WorkerStartupDelay { get; set; } = 5;

    public static XmlRsaConfig XmlRsaConfig { get; set; } = new XmlRsaConfig();
    public string PyextensionApiUrl { get; set; } = string.Empty;
    public string BankGateWayDbConnection { get; set; } = string.Empty;
    //public RSAKey RSAKey { get; set; } = new RSAKey();
    public string S3BucketName { get; set; } = string.Empty;
    public string ManagementApiUrl { get; set; } = string.Empty;
}

public class DbConnection
{
    public string PrimaryConnection { get; set; } = string.Empty;
    public string ReadOnlyConnection { get; set; } = string.Empty;
}

public class DbOptionConst
{
    public static int DbMaxRetryCount => 10;

    public static TimeSpan DbRetryDelay => TimeSpan.FromSeconds(30);
    public static int DbCommandTimeout => (int)TimeSpan.FromMinutes(10).TotalSeconds;
}
